#!/usr/bin/env ruby

#
# Copyright 2014 Evernote Corporation. All rights reserved.
# Copyright 2013 Proofpoint, Inc. All rights reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

#
# = NAME
#
# factloader - Load facts from Puppet YAML files into Inventory
#
# = SYNOPSIS
#
#    factloader { --factpath path | file } [file [...]]
#       --nocheck-expiry  Don't check expiration date
#       --factpath        Specify directory full of *.yaml files
#       --trafficcontrol  Specify trafficcontrol parameter
#          url=           Specify trafficcontrol URL
#          username=      Specify trafficcontrol Username
#          password=      Specify trafficcontrol password
#       Other options as outlined in Optconfig
#
# = DESCRIPTION
#
# = AUTHOR
#
# Jeremy Brinkley, <jbrinkley@evernote.com>
# Isaac Finnegan, <ifinnegan@evernote.com>
#

require 'optconfig'
require 'noms/factloader'
require 'yaml'
require 'syslog/logger'
require 'logger/unixout'

$version = NOMS::Factloader::VERSION
$me = 'factloader'

$opt = Optconfig.new($me,
                     {
                         'syslog!' => true,
                         'factpath=s' => nil,
                         'check-expiry!' => true,
                         'add=s%' => {
                             'agent_type' => $me + '/' + $version,
                             'inventory_component_type' => 'system' },
                         'cmdb=s%' => {
                             'trafficcontrol' => 'http://trafficcontrol/cmdb_api/v1/fact'
                         },
                         'trafficcontrol=s%' => {
                             'url' => 'http://trafficcontrol/cmdb_api/v1/fact' },
                         'keymap=s%' => { } })

$opt['cmdb']['url'] = $opt['trafficcontrol']['url']
%w(username password).each do |p|
    $opt['cmdb'][p] = $opt['trafficcontrol'][p] if $opt['trafficcontrol'][p]
end

loggers = [ Logger::Unixout.new ]
loggers[0].progname = $me
loggers[0].level = Logger::Unixout::INFO if $opt['verbose'] > 0
loggers[0].level = Logger::Unixout::DEBUG if $opt['debug'] > 0

if $opt['syslog']
    loggers << Syslog::Logger.new($me, Syss

                                  factloader = NOMS::Factloader.new($opt.merge({ 'logger' => loggers })

factloader.gather_facts(ARGV)

files = files + ARGV

facts = gather_facts(files)

cmdb = NOMS::CMDB.new($opt)
$opt.dbg 1, "cmdb created with #{$opt.inspect}"
facts.each do |rawfactset|
   factset = map_keys($opt['keymap'], rawfactset).merge($opt['add'])
   id = factset['fqdn']
   vrb "Updating facts for #{id}"
   begin
      cmdb.tc_post(factset) unless $opt['dry-run']
   rescue => e
      wrn "Error updating facts for #{id}: #{e}"
   end
end

